/* Begin Limestone Mine */

/* Override industrytiles to accept all cargos. */
item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_1) {
	property {
		substitute: 72;
		override: 72;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_2) {
	property {
		substitute: 73;
		override: 73;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_3) {
	property {
		substitute: 74;
		override: 74;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_4) {
	property {
		substitute: 75;
		override: 75;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_5) {
	property {
		substitute: 76;
		override: 76;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_6) {
	property {
		substitute: 77;
		override: 77;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_7) {
	property {
		substitute: 78;
		override: 78;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_8) {
	property {
		substitute: 79;
		override: 79;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_9) {
	property {
		substitute: 80;
		override: 80;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_10) {
	property {
		substitute: 81;
		override: 81;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_11) {
	property {
		substitute: 82;
		override: 82;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_12) {
	property {
		substitute: 83;
		override: 83;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_13) {
	property {
		substitute: 84;
		override: 84;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_14) {
	property {
		substitute: 85;
		override: 85;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_15) {
	property {
		substitute: 86;
		override: 86;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_16) {
	property {
		substitute: 87;
		override: 87;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_limestone_mine_17) {
	property {
		substitute: 88;
		override: 88;
        accepted_cargos: [[PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

/* Construction check for Limestone Mine */
switch (FEAT_INDUSTRIES, SELF, loc_check_limestone_mine, !IsNearTown() && IndustryElevationCheck(0, 2) && NoNearbyCompetitors(industry_limestone_mine, 20))
	{1: return CB_RESULT_LOCATION_ALLOW; return CB_RESULT_LOCATION_DISALLOW;}

/* BEGIN PRODUCTION: Read up from bottom */

/* Boosted production if Fuel is supplied */
produce (produce_limestone_mine_boosted,
	[FUEL: 3;],		// Consume
	[LIME: 32;],	// Produce
	0 				// Don't run callback again
	)

/* Regular production */
produce (produce_limestone_mine,
	[],				// Consume
	[LIME: 16;],	// Produce
	0 				// Don't run callback again
	)

/* Check for Fuel for normal or boosted production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_limestone_mine_1, incoming_cargo_waiting("FUEL") >= 3) {1: produce_limestone_mine_boosted; produce_limestone_mine;}

/* Don't build up too large a stockpile */
produce (produce_limestone_mine_stockpile,
	[FUEL: 1;],               // Consume
	[],                       // Produce
	1                         // Run callback again
	)
	
switch (FEAT_INDUSTRIES, SELF, switch_stockpile_limestone_mine, incoming_cargo_waiting("FUEL") > 4096) {1: produce_limestone_mine_stockpile; produce_none;}

/* END PRODUCTION */

item (FEAT_INDUSTRIES, industry_limestone_mine, 15) {
	property {
		substitute: INDUSTRYTYPE_GOLD_MINE;
		life_type: IND_LIFE_TYPE_EXTRACTIVE;
		cargo_types: [
			accept_cargo("FUEL"),
			produce_cargo("LIME", 0),
            ];
		name: string(STR_NAME_LIMESTONE_QUARRY);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_NAME_LIMESTONE_QUARRY));
		prob_map_gen: 1;
		prob_in_game: 0;
		map_colour: 148;
		fund_cost_multiplier: 40;
	}
	graphics {
        location_check: loc_check_limestone_mine;
        produce_256_ticks: switch_produce_limestone_mine_1;
		produce_cargo_arrival: switch_stockpile_limestone_mine;
		extra_text_industry: string(STR_LIMESTONE_QUARRY_HELPTEXT);
        /* Don't allow any production changes */
		build_prod_change: 16; // 100% production
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
	}
}
