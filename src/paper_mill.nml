/* *** Begin Paper Mill *** */

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_1) {
	property {
		substitute: 64;
		override: 64;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_2) {
	property {
		substitute: 65;
		override: 65;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_3) {
	property {
		substitute: 66;
		override: 66;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_4) {
	property {
		substitute: 67;
		override: 67;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_5) {
	property {
		substitute: 68;
		override: 68;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_6) {
	property {
		substitute: 69;
		override: 69;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_7) {
	property {
		substitute: 70;
		override: 70;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_paper_mill_8) {
	property {
		substitute: 71;
		override: 71;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

/* Construction check for Paper Mill */
switch (FEAT_INDUSTRIES, SELF, loc_check_paper_mill, IsBeingFunded() || (IsNearTown() && TownHasPopulation(500) && NoNearbyCompetitors(industry_paper_mill, 128)))
	{1: return CB_RESULT_LOCATION_ALLOW; return CB_RESULT_LOCATION_DISALLOW;}

/* BEGIN PRODUCTION: Read up from bottom */

produce (produce_paper_mill_efficient,
	[PASS: 1; WOOD: 1; RFPR: 1; KAOL: 1;],   // Consume
	[PAPR: 3;],                              // Produce
	1                                        // Run callback again
	)

produce (produce_paper_mill_improved_kaolin,
	[PASS: 1; WOOD: 1; KAOL: 1;],   // Consume
	[PAPR: 3;],                     // Produce
	1                               // Run callback again
	)

produce (produce_paper_mill_improved_chemicals,
	[PASS: 1; WOOD: 1; RFPR: 1;],   // Consume
	[PAPR: 3;],                     // Produce
	1                               // Run callback again
	)

produce (produce_paper_mill_basic,
	[PASS: 1; WOOD: 1;],    // Consume
	[PAPR: 1;],             // Produce
	1                       // Run callback again
	)

/* Is production super-boosted by Kaolin and Chemicals? */
switch (FEAT_INDUSTRIES, SELF, switch_produce_paper_mill_super_boosted_kaolin, incoming_cargo_waiting("KAOL") > 0) {
	1: produce_paper_mill_efficient;
	produce_paper_mill_improved_chemicals;
}

/* Is production boosted by Kaolin? */
switch (FEAT_INDUSTRIES, SELF, switch_produce_paper_mill_boosted_kaolin, incoming_cargo_waiting("KAOL") > 0) {
	1: produce_paper_mill_improved_kaolin;
	produce_paper_mill_basic;
}

/* Is production boosted by Chemicals? */
switch (FEAT_INDUSTRIES, SELF, switch_produce_paper_mill_boosted_chemicals, incoming_cargo_waiting("RFPR") > 0) {
	1: switch_produce_paper_mill_super_boosted_kaolin;
	switch_produce_paper_mill_boosted_kaolin;
}

produce (produce_paper_mill_stockpile,
	[WOOD: 1;],             // Consume
	[],                     // Produce
	1                       // Run callback again
	)

/* We don't have both Workers and Wood. Which do we consume? */
switch (FEAT_INDUSTRIES, SELF, switch_produce_paper_mill_idle, incoming_cargo_waiting("WOOD") > 4096) {
	1: produce_paper_mill_stockpile;
	switch_produce_idle;
}

/* Check if we have both Workers and Wood */
switch (FEAT_INDUSTRIES, SELF, switch_produce_paper_mill, (incoming_cargo_waiting("PASS") > 0 && incoming_cargo_waiting("WOOD") > 0)) {
	1: switch_produce_paper_mill_boosted_chemicals;
	switch_produce_paper_mill_idle;
}

/* END PRODUCTION */

item (FEAT_INDUSTRIES, industry_paper_mill) {
	property {
		substitute:	INDUSTRYTYPE_PAPER_MILL;
		life_type: IND_LIFE_TYPE_PROCESSING;
		cargo_types: [
			accept_cargo("PASS"),
			accept_cargo("WOOD"),
			accept_cargo("KAOL"),
			accept_cargo("RFPR"),
			produce_cargo("PAPR", 0),
		];
		name: string(STR_NAME_PAPER_MILL);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_NAME_PAPER_MILL));
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
		prob_map_gen: 1;
		prob_in_game: 0;
		fund_cost_multiplier: 40;
	}
	graphics {
		location_check: loc_check_paper_mill;
		produce_cargo_arrival: switch_produce_paper_mill;
		/* Don't allow any production changes */
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
	}
}
