/* Begin Logging Camp */

item (FEAT_INDUSTRYTILES, ind_tile_logging_camp_1) {
	property {
		substitute: 11;
		override: 11;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_logging_camp_2) {
	property {
		substitute: 12;
		override: 12;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_logging_camp_3) {
	property {
		substitute: 13;
		override: 13;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_logging_camp_4) {
	property {
		substitute: 14;
		override: 14;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, ind_tile_logging_camp_5) {
	property {
		substitute: 15;
		override: 15;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

/* Only cut trees December through March. */
switch (FEAT_INDUSTRIES, SELF, switch_logging_camp_production_check_1, (current_month <= 2 || current_month == 11)) {return;}

item (FEAT_INDUSTRIES, industry_logging_camp) {
	property {
		substitute:	INDUSTRYTYPE_SAWMILL;
		life_type: IND_LIFE_TYPE_PROCESSING;
		cargo_types: [produce_cargo("WOOD", 0)];
		spec_flags:	bitmask(IND_FLAG_CUT_TREES);
		name: string(STR_NAME_LOGGING_CAMP);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_NAME_LOGGING_CAMP));
		prob_map_gen: 0;
		prob_in_game: 0;
		fund_cost_multiplier: 5;
	}
	graphics {
		control_special:		switch_logging_camp_production_check_1;
		extra_text_industry: string(STR_LOGGING_CAMP_HELPTEXT);
	}
}
